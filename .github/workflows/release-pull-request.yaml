name: Release pull request
on:
  pull_request:
    types: [opened]
jobs:
  debug_info:
    name: Debug info
    runs-on: ubuntu-18.04
    steps:
      - name: Print github context JSON
        run: |
          cat <<EOF
          ${{ toJson(github) }}
          EOF
  gather_facts:
    name: Gather facts
    runs-on: ubuntu-18.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - id: get_version
        name: Get version
        run: |
          title="${{ github.event.pull_request.title }}"
          # Matches strings like:
          #
          #   - "release v1.2.3"
          #   - "release v1.2.3-r4"
          #   - "release v1.2.3 (#56)"
          #   - "release v1.2.3-r4 (#56)"
          #
          # And outputs version part (v1.2.3).
          if echo $title | grep -qE '^release v[0-9]+\.[0-9]+\.[0-9]+([.-][^ .-][^ ]*)?( \(#[0-9]+\))?$' ; then
            version=$(echo $title | cut -d ' ' -f 2)
          fi
          echo "version=\"$version\""
          echo "::set-output name=version::${version}"
  install_architect:
    name: Install architect
    runs-on: ubuntu-18.04
    env:
      BINARY: "architect"
      DIR: "/opt/cache"
      MODULE: "github.com/giantswarm/architect"
      VERSION: "934a337dd642a6d77536e13f2ad0bd2dfe8868bf"
    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v1
        with:
          key: "install-${{ env.BINARY }}-${{ env.URL }}"
          path: "${{ env.DIR }}"
      - name: Get module
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        env:
          GO111MODULE: "on"
          GOBIN: "${{ env.DIR }}"
        run: |
          go get ${{ env.MODULE }}@${{ env.VERSION }}
      - name: Smoke test
        run: |
          ${{ env.DIR }}/${{ env.BINARY }} version
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: "${{ env.BINARY }}"
          path: "${{ env.DIR }}/${{ env.BINARY }}"
  prepare_pr_content:
    name: Prepare PR content
    runs-on: ubuntu-18.04
    needs:
      - gather_facts
      - install_architect
    if: ${{ needs.gather_facts.outputs.version }}
    steps: 
      - name: Download architect artifact to /opt/bin
        uses: actions/download-artifact@v2
        with:
          name: architect
          path: /opt/bin
      - name: Prepare /opt/bin
        run: |
          chmod +x /opt/bin/*
          echo "::add-path::/opt/bin"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch base ref
        run: |
          git fetch origin "${{ github.base_ref }}"
      - name: Fail if PR is not empty
        run: |
          git diff --exit-code "origin/${{ github.base_ref }}" HEAD
      - name: Update changelog
        run: |
          architect prepare-release "${{ needs.gather_facts.outputs.version }}"
      - name: Commit changes
        env:
          version: "${{ needs.gather_facts.outputs.version }}"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "release ${{ env.version }}" -- ./CHANGELOG.md
      - name: Push changes
        env:
          REMOTE_REPO: "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
        run: |
          git push "${REMOTE_REPO}" HEAD:refs/heads/${{ github.head_ref }}
