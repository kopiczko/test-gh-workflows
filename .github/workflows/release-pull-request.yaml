name: Release pull request
on:
  pull_request:
    types: [opened]
jobs:
  debug_info:
    name: Debug info
    runs-on: ubuntu-18.04
    steps:
      - name: Print github context JSON
        run: |
          echo "${{ toJson(github) }}"
  gather_facts:
    name: Gather facts
    runs-on: ubuntu-18.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - id: get_version
        name: Get version
        run: |
          title="${{ github.event.pull_request.title }}"
          # Matches strings like:
          #
          #   - "release v1.2.3"
          #   - "release v1.2.3-r4"
          #   - "release v1.2.3 (#56)"
          #   - "release v1.2.3-r4 (#56)"
          #
          # And outputs version part (v1.2.3).
          if echo $title | grep -qE '^release v[0-9]+\.[0-9]+\.[0-9]+([.-][^ .-][^ ]*)?( \(#[0-9]+\))?$' ; then
            version=$(echo $title | cut -d ' ' -f 2)
          fi
          echo "version=\"$version\""
          echo "::set-output name=version::${version}"
  install_architect:
    name: Install architect
    runs-on: ubuntu-18.04
    env:
      BINARY: "architect"
      MODULE: "github.com/giantswarm/architect"
      VERSION: "1a330ad33b656bb38ab7ef81782dd3956f5dd508"
    steps:
      - name: Key
        id: key
        run: |
          cache_dir="/opt/cache"
          cache_key="install-${MODULE}@${VERSION}"
          install_dir="$(go env GOBIN)"
          echo "::set-output name=binary::${BINARY}"
          echo "::set-output name=cache_dir::${cache_dir}"
          echo "::set-output name=cache_key::${cache_key}"
          echo "::set-output name=install_dir::${install_dir}"
          echo "::set-output name=module::${MODULE}"
          echo "::set-output name=version::${VERSION}"
      - name: Cache
        id: cache
        uses: actions/cache@v1
        with:
          key: "${{ steps.key.outputs.cache_key }}"
          path: "${{ steps.key.outputs.cache_dir }}"
      - name: Get module
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          go get ${{ steps.key.outputs.module }}@${{ steps.key.outputs.version }}
      - name: Move to cache location
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          binary="${{ steps.key.outputs.binary }}"
          cache_dir="${{ steps.key.outputs.cache_dir }}"
          install_dir="${{ steps.key.outputs.install_dir }}"
          mkdir $cache_dir
          mv "$install_dir/$binary" $cache_dir
          chmod +x $cache_dir/$binary
      - name: Smoke test
        run: |
          ${{ steps.key.outputs.cache_dir }}/${{ steps.key.outputs.binary }} version
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: "${{ steps.key.outputs.binary }}"
          path: "${{ steps.key.outputs.cache_dir }}/${{ steps.key.outputs.binary }}"
  prepare_pr_content:
    name: Prepare PR content
    runs-on: ubuntu-18.04
    needs:
      - gather_facts
      - install_architect
    if: ${{ needs.gather_facts.outputs.version }}
    steps: 
      - name: Download architect artifact to /opt/bin
        uses: actions/download-artifact@v2
        with:
          name: architect
          path: /opt/bin
      - name: Prepare /opt/bin
        run: |
          chmod +x /opt/bin/*
          echo "::add-path::/opt/bin"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch base ref
        run: |
          git fetch origin "${{ github.base_ref }}"
      - name: Fail if PR is not empty
        run: |
          git diff --exit-code "origin/${{ github.base_ref }}" HEAD
      - name: Update changelog
        run: |
          version="${{ needs.gather_facts.outputs.version }}"
          architect release prepare . "$version"
          echo "$version" > ./CHANGELOG.md
      - name: Commit changes
        run: |
          version="${{ needs.gather_facts.outputs.version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./CHANGELOG.md
          git commit -m "release $version"
      - name: Push changes
        env:
          REMOTE_REPO: "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
        run: |
          git push "${REMOTE_REPO}" HEAD:refs/heads/${{ github.head_ref }}
