name: Release pull request
on:
  pull_request: {}
  #pull_request:
  #  types: [opened]
jobs:
  gather-facts:
    name: Gather facts
    runs-on: ubuntu-18.04
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - id: get version
        name: Get version
        run: |
          title="${{ github.event.pull_request.title }}"
          if echo $title | grep -qE '^release v\d+\.\d+\.\d+([.-][^.-].*)?$' ; then
            version=$(echo $title | cut -d ' ' -f 2)
          fi
          echo "version=\"$version\""
          echo "::set-output name=version::${version}"
  prepare-pr-content:
    name: Prepare PR content
    runs-on: ubuntu-18.04
    needs: check-if-should-run
    if: ${{ needs.gather-facts.outputs.version }}
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fail if PR is not empty
        run: |
          git diff --exit-code "${{ github.base_ref }}" "${{ github.head_ref }}"
      - name: Print GITHUB_SHA and GITHUB_REF
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "GITHUB_REF=${GITHUB_REF}"
      - name: Print some github context fields
        run: |
          echo "github.ref=${{ github.ref }}"
          echo "github.base_ref=${{ github.base_ref }}"
          echo "github.head_ref=${{ github.head_ref }}"
      - name: Print github context JSON
        run: |
          echo "toJson(github)=${{ toJson(github) }}"
      - name: Print PR title
        run: |
          echo "${{ github.event.pull_request.title }}"
      - name: Print github context JSON
        run: |
          echo "toJson(github)=${{ toJson(github) }}"
      - name: Print Go version
        run: |
          go version
